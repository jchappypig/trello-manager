# Scaffolding generated by Casein v5.1.1.5

module Casein
  class CardsController < Casein::CaseinController
    before_filter :sync_trello, only: [:index, :completed]


    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]

    def index
      @casein_page_title = 'Current all'

      @cards = {}

      @cards['Total'] = CurrentCard.all

      Label.all.each do |label|
        @cards[label.name] = CurrentCard.with_label(label.name)
      end

      @points = calculate(@cards)
    end

    def completed
      @casein_page_title = 'Current completed'

      @cards = {}

      @cards['Total'] = CurrentCard.done

      Label.all.each do |label|
        @cards[label] = CurrentCard.done.with_label(label.name)
      end

      @points = calculate(@cards)

      render :index
    end

    def export
      cards = CurrentCard.all
      respond_to do |format|
        format.csv { send_data Exporter.cards_to_csv(cards), filename: "cards-#{Time.now}.csv" }
      end
    end

    def show
      @casein_page_title = 'View card'
      @card = Card.find params[:id]
    end

    private

    def calculate(cards)
      points = {}

      cards.each do |label, labeled_cards|
        label_points = labeled_cards.map(&:estimated_size).sum
        points[label] = label_points
      end

      points
    end

    def calculate_for_label(points, size, cards, card, label_name)
      if label_is?(card.labels, label_name) || label_name == 'Other'
        points[label_name] = points[label_name] + SIZE_MAP[size]
        cards[label_name] << card
      end
    end

    def sync_trello
      if CurrentCard.last && (CurrentCard.last.created_at < Time.now - 15.minutes)
        CurrentCard.delete_all
        trello_cards = Trello::Action.search('board:"Awesome one team" list:"current" is:open', cards_limit: 200)['cards'] +
            Trello::Action.search('board:"Awesome one team" list:"pull" is:open', cards_limit: 200)['cards'] +
            Trello::Action.search('board:"Awesome one team" list:"work in progress" closed:false is:open', cards_limit: 200)['cards'] +
            Trello::Action.search('board:"Awesome one team" list:"up next" is:open', cards_limit: 200)['cards']

        trello_cards.each do |trello_card|
          Syncer.from_trello(trello_card)
        end
      end
    end

  end
end