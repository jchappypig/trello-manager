# Scaffolding generated by Casein v5.1.1.5

module Casein
  class MembersController < Casein::CaseinController
  
    ## optional filters for defining usage according to Casein::AdminUser access_levels
    # before_filter :needs_admin, :except => [:action1, :action2]
    # before_filter :needs_admin_or_current_user, :only => [:action1, :action2]
  
    def index
      @casein_page_title = 'Members'
  		@members = Member.order(sort_order(:full_name)).paginate :page => params[:page]
    end
  
    def show
      @casein_page_title = 'View member'
      @member = Member.find params[:id]
    end
  
    def new
      @casein_page_title = 'Add a new member'
    	@member = Member.new
    end

    def create
      @member = Member.new member_params
    
      if @member.save
        flash[:notice] = 'Member created'
        redirect_to casein_members_path
      else
        flash.now[:warning] = 'There were problems when trying to create a new member'
        render :action => :new
      end
    end
  
    def update
      @casein_page_title = 'Update member'
      
      @member = Member.find params[:id]
    
      if @member.update_attributes member_params
        flash[:notice] = 'Member has been updated'
        redirect_to casein_members_path
      else
        flash.now[:warning] = 'There were problems when trying to update this member'
        render :action => :show
      end
    end
 
    def destroy
      @member = Member.find params[:id]

      @member.destroy
      flash[:notice] = 'Member has been deleted'
      redirect_to casein_members_path
    end
  
    private
      
      def member_params
        params.require(:member).permit(:full_name, :trello_identifier)
      end

  end
end